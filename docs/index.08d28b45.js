class e extends HTMLElement{feedUrl;timeout;user;post;constructor(){super();let{source:e,timeout:t,user:r,post:s}=this.dataset;try{this.feedUrl=new URL(e)}catch(e){}try{this.user=new URL(r)}catch(e){}try{this.post=new URL(s)}catch(e){}this.timeout=Number(t)||600;let a=new CSSStyleSheet;a.replaceSync(":where(fed-embed){display:block;}:where(fed-embed ul){list-style-type:none;margin:0;padding:0;}:where(fed-embed li){padding:0.5rem 1.5rem;border-bottom:1px solid#ccc;}"),document.adoptedStyleSheets=[a]}connectedCallback(){switch(!0){case!!this.feedUrl:this.renderRSSFeed();break;case!!this.user:this.renderJSONFeed();break;case!!this.post:this.renderPost();break;default:console.error(`No valid URLs found on ${this.outerHTML}`),this.selfDestruct()}}async renderRSSFeed(){let e=await this.fetch(this.feedUrl),t=this.parseXML(e),r=document.createElement("ul");t.querySelectorAll("item").forEach(e=>{let t=e.querySelector("description").textContent;r.insertAdjacentHTML("beforeend",`<li>${t}</li>`)}),this.append(r)}async renderJSONFeed(){let e,t;let{origin:r,pathname:s}=this.user;try{e=new URL(`${r}/api/v1/accounts/lookup?acct=${s.replaceAll(/\/@/g,"")}`)}catch(e){this.selfDestruct(e);return}let{error:a,id:i}=JSON.parse(await this.fetch(e));if(a){this.selfDestruct(a);return}try{t=new URL(`${r}/api/v1/accounts/${i}/statuses?exclude_replies=true&exclude_reblogs=true`)}catch(e){this.selfDestruct(e);return}let n=JSON.parse(await this.fetch(t)),l=document.createElement("ul");n.forEach(e=>{l.insertAdjacentHTML("beforeend",`<li>${e.content}</li>`)}),this.append(l)}async renderPost(){let e;let{origin:t,pathname:r}=this.post;try{e=new URL(`${t}/api/v1/statuses/${r.split("/").at(-1)}`)}catch(e){this.selfDestruct(e);return}let{error:s,content:a}=JSON.parse(await this.fetch(e));if(s){this.selfDestruct(s);return}this.insertAdjacentHTML("beforeend",a)}selfDestruct(e=null){e&&console.error(e),console.error("A <fed-embed> element has self destructed. Additional logging information may be available above."),this.remove()}async fetch(e){let{timeout:t}=this,r=localStorage.getItem(e.toString())||!1;if(r){let{expires:t,dataAsString:s}=JSON.parse(r);if(t>Date.now())return s;localStorage.removeItem(e.toString())}let s=await fetch(e.toString()),a=await s.text(),i={expires:Date.now()+1e3*t,dataAsString:a};return localStorage.setItem(e.toString(),JSON.stringify(i)),a}parseXML(e){let t=new DOMParser,r=t.parseFromString(e,"text/xml");return r}}window.customElements.define("fed-embed",e);